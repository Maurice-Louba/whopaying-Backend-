# Generated by Django 5.2.3 on 2025-07-03 13:42

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profiles/')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('preferred_currency', models.CharField(choices=[('AUD', 'Australian Dollar'), ('BWP', 'Botswana Pula'), ('BRL', 'Brazilian Real'), ('CAD', 'Canadian Dollar'), ('CHF', 'Swiss Franc'), ('CNY', 'Chinese Yuan'), ('DZD', 'Algerian Dinar'), ('EGP', 'Egyptian Pound'), ('EUR', 'Euro'), ('GBP', 'British Pound'), ('GNF', 'Guinean Franc'), ('GHS', 'Ghanaian Cedi'), ('HKD', 'Hong Kong Dollar'), ('INR', 'Indian Rupee'), ('JPY', 'Japanese Yen'), ('KES', 'Kenyan Shilling'), ('KRW', 'South Korean Won'), ('MAD', 'Moroccan Dirham'), ('MRO', 'Mauritanian Ouguiya'), ('MUR', 'Mauritian Rupee'), ('MXN', 'Mexican Peso'), ('NOK', 'Norwegian Krone'), ('NGN', 'Nigerian Naira'), ('NZD', 'New Zealand Dollar'), ('RUB', 'Russian Ruble'), ('SCR', 'Seychellois Rupee'), ('SDG', 'Sudanese Pound'), ('SEK', 'Swedish Krona'), ('SGD', 'Singapore Dollar'), ('TND', 'Tunisian Dinar'), ('TRY', 'Turkish Lira'), ('TZS', 'Tanzanian Shilling'), ('UGX', 'Ugandan Shilling'), ('USD', 'US Dollar'), ('XAF', 'Central African CFA Franc'), ('XOF', 'West African CFA Franc'), ('XPF', 'CFP Franc (Pacific Franc)'), ('ZAR', 'South African Rand'), ('ZMW', 'Zambian Kwacha')], default='MAD', max_length=3)),
                ('bio', models.TextField(blank=True, max_length=150)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15, unique=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('avatar', models.ImageField(upload_to='avatar/')),
                ('cause', models.CharField(choices=[('vacances', 'Vacances'), ('famille', 'Famille'), ('amis', 'Amis'), ('projet', 'Projet professionnel'), ('evenement', 'Événement spécial'), ('sport', 'Sport / activité'), ('association', 'Association / ONG'), ('tâches_ménagers', 'Tâches_ménagers'), ('restaurant', 'Restaurant'), ('maison/appartement', 'Maison/Appartement'), ('autre', 'Autre')], max_length=50)),
                ('description', models.TextField(max_length=150)),
                ('members', models.ManyToManyField(related_name='membership_groups', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('description', models.TextField(max_length=250)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('user_depenced', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_of_expense', to='whopayingg.group')),
            ],
        ),
        migrations.CreateModel(
            name='Debt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('creditor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='debts_to_receive', to=settings.AUTH_USER_MODEL)),
                ('debtor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='debts_to_pay', to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='debts', to='whopayingg.group')),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(default='membre', max_length=50)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='whopayingg.group')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
